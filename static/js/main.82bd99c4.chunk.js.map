{"version":3,"sources":["config.js","componenets/Board.js","App.js","index.js"],"names":["config","too_easy","grid_w","grid_l","mine_num","easy","kinda_easy","Board","useState","level","setLevel","useEffect","new_Board","board","mineLocation","x","subColon","y","push","value","revealed","flagged","mineCount","getRandomInt","surround_mine_num","xi","yi","create_Board","max","Math","floor","random","className","type","onClick","defaultChecked","App","html","document","querySelector","console","log","clientWidth","clientHeight","id","ReactDOM","render","StrictMode","getElementById"],"mappings":"kLAkBeA,EAlBA,CACXC,SAAU,CACNC,OAAQ,EACRC,OAAQ,EACRC,SAAU,GAEdC,KAAM,CACFH,OAAQ,GACRC,OAAQ,EACRC,SAAU,IAEdE,WAAY,CACRJ,OAAQ,GACRC,OAAQ,GACRC,SAAU,KCmFHG,EA9FD,WAAO,IAAD,EACQC,mBAAS,IADjB,gCAEUA,mBAAS,eAFnB,mBAETC,EAFS,KAEFC,EAFE,KAGhBC,qBAAU,WACNC,EAAUH,KACX,IAEH,IAAMG,EAAY,SAACH,GAAW,IAAD,EACYT,EAAOS,IAchD,SAAsBP,EAAQC,EAAQC,GAIlC,IAHA,IAAIS,EAAQ,GACRC,EAAe,GAEVC,EAAI,EAAGA,EAAIb,EAAQa,IAAK,CAE7B,IADA,IAAIC,EAAW,GACNC,EAAI,EAAGA,EAAId,EAAQc,IACxBD,EAASE,KAAK,CACVC,MAAO,EACPC,UAAU,EACVL,EAAGA,EACHE,EAAGA,EACHI,SAAS,IAGjBR,EAAMK,KAAKF,GAGf,IAAIM,EAAY,EAChB,KAAOA,EAAYlB,GAAU,CACzB,IAAIW,EAAIQ,EAAarB,EAAS,GAC1Be,EAAIM,EAAapB,EAAS,GAEJ,IAAtBU,EAAME,GAAGE,GAAGE,QACZN,EAAME,GAAGE,GAAGE,MAAQ,IACpBL,EAAaI,KAAK,CAACH,EAAGE,IACtBK,KAIR,IAAK,IAAIP,EAAI,EAAGA,EAAIb,EAAQa,IACxB,IAAK,IAAIE,EAAI,EAAGA,EAAId,EAAQc,IACxB,GAA0B,MAAtBJ,EAAME,GAAGE,GAAGE,MAAhB,CAIA,IADA,IAAIK,EAAoB,EACfC,EAAKV,EAAI,EAAGU,GAAMV,EAAI,EAAGU,IAC9B,IAAK,IAAIC,EAAKT,EAAI,EAAGS,GAAMT,EAAI,EAAGS,IACzBD,EAAK,GAAKA,GAAMvB,GAChBwB,EAAK,GAAKA,GAAMvB,GAChBsB,IAAOV,GAAKW,IAAOT,GAGG,MAAxBJ,EAAMY,GAAIC,GAAIP,OAEbK,IAIZX,EAAME,GAAGE,GAAGE,MAAQK,GA9DdG,CAFW,EACjBzB,OADiB,EACTC,OADS,EACDC,WAqE5B,SAASmB,EAAaK,GAClB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,IAGjD,OACI,yBAAKI,UAAU,aACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,SACX,uCAAavB,EAAb,KACA,4BAAQwB,KAAK,QAAQC,QA1ErC,WACIxB,EAAS,QACTE,EAAU,SAwE2CuB,gBAAc,GAAvD,QACA,4BAAQF,KAAK,QAAQC,QAtErC,WACIxB,EAAS,cACTE,EAAU,gBAoEE,kBCjELwB,MArBf,WACE,IAAIC,EAAOC,SAASC,cAAc,QAGlC,OAFAC,QAAQC,IAAI,oBAAqBJ,EAAKK,YAAa,IAAKL,EAAKM,cAG3D,yBAAKX,UAAU,OACb,yBAAKA,UAAU,aACb,+CACA,kBAAC,EAAD,MACA,yBAAKY,GAAG,WACN,yBAAKA,GAAG,aACN,uBAAGZ,UAAU,YAAb,+BACA,uBAAGA,UAAU,UAAb,eAAkC,0BAAMA,UAAU,aAAhB,KAAlC,WACA,uBAAGA,UAAU,UAAb,4CCbZa,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFT,SAASU,eAAe,U","file":"static/js/main.82bd99c4.chunk.js","sourcesContent":["const config = {\r\n    too_easy: {\r\n        grid_w: 4,\r\n        grid_l: 4,\r\n        mine_num: 2\r\n    },\r\n    easy: {\r\n        grid_w: 10,\r\n        grid_l: 8,\r\n        mine_num: 10\r\n    },\r\n    kinda_easy: {\r\n        grid_w: 18,\r\n        grid_l: 14,\r\n        mine_num: 40\r\n    }\r\n}\r\n\r\nexport default config","import React, { useState, useEffect } from \"react\";\r\nimport config from \"../config\";\r\n\r\nconst Board = () => {\r\n    const [grid, setGrid] = useState([]);\r\n    const [level, setLevel] = useState('kinda_easy');\r\n    useEffect(() => {\r\n        new_Board(level);\r\n    }, []);\r\n    \r\n    const new_Board = (level) => {\r\n        const { grid_w, grid_l, mine_num } = config[level];\r\n        const board = create_Board(grid_w, grid_l, mine_num);\r\n    }\r\n\r\n    function easy_mode() {\r\n        setLevel('easy');\r\n        new_Board('easy');\r\n    }\r\n\r\n    function kinda_easy_mode() {\r\n        setLevel('kinda_easy');\r\n        new_Board('kinda_easy');\r\n    }\r\n\r\n    function create_Board(grid_w, grid_l, mine_num) {\r\n        let board = [];\r\n        let mineLocation = [];\r\n\r\n        for (let x = 0; x < grid_w; x++) {\r\n            let subColon = [];\r\n            for (let y = 0; y < grid_l; y++) {\r\n                subColon.push({\r\n                    value: 0,\r\n                    revealed: false,\r\n                    x: x,\r\n                    y: y,\r\n                    flagged: false,\r\n                });\r\n            }\r\n            board.push(subColon);\r\n        }\r\n\r\n        let mineCount = 0;\r\n        while (mineCount < mine_num) {\r\n            let x = getRandomInt(grid_w - 1);\r\n            let y = getRandomInt(grid_l - 1);\r\n\r\n            if (board[x][y].value === 0) {\r\n                board[x][y].value = \"M\";\r\n                mineLocation.push([x, y]);\r\n                mineCount++;\r\n            }\r\n        }\r\n\r\n        for (let x = 0; x < grid_w; x++) {\r\n            for (let y = 0; y < grid_l; y++) {\r\n                if (board[x][y].value === \"M\") {\r\n                    continue;\r\n                }\r\n                let surround_mine_num = 0;\r\n                for (let xi = x - 1; xi <= x + 1; xi++) {\r\n                    for (let yi = y - 1; yi <= y + 1; yi++) {\r\n                        if ((xi < 0 || xi >= grid_w) ||\r\n                            (yi < 0 || yi >= grid_l) ||\r\n                            (xi === x && yi === y)) {\r\n                            continue\r\n                        }\r\n                        if(board[xi][yi].value === \"M\")\r\n                        {\r\n                            surround_mine_num++;\r\n                        }\r\n                    }\r\n                }\r\n                board[x][y].value = surround_mine_num;\r\n            }\r\n        }\r\n        return { board, mineLocation };\r\n    }\r\n\r\n    function getRandomInt(max) {\r\n        return Math.floor(Math.random() * Math.floor(max));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"status-bar\">\r\n                <div className=\"level\">\r\n                    <span>Level:{level} </span>\r\n                    <button type=\"radio\" onClick={easy_mode} defaultChecked >Easy</button>\r\n                    <button type=\"radio\" onClick={kinda_easy_mode}>Kinda_easy</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;","import React from 'react';\nimport './App.css';\nimport Board from \"./componenets/Board\";\n\nfunction App() {\n  let html = document.querySelector(\"html\");\n  console.log(\"Your render area:\", html.clientWidth, \"x\", html.clientHeight)\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Not MineSweeper</h1>\n        <Board />\n        <div id=\"overlay\">\n          <div id=\"overlayin\">\n            <p className=\"big glow\">Congratulations, you won!!!</p>\n            <p className=\"darker\">It took you <span className=\"moveCount\">0</span> moves.</p>\n            <p className=\"darker\">Click anywhere to start a new game.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}